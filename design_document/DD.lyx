#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{listings}
\usepackage{xcolor}
\usepackage{pdflscape}
\usepackage{courier}
%\usepackage{mathtools}
\usepackage{graphicx}
\usepackage{booktabs}
\usepackage[T1]{fontenc}
\usepackage{lmodern}

\usepackage{listings}
\lstset{columns=fullflexible}

\usepackage{charter}

\usepackage{xspace}
%\usepackage{algorithmicx}
%\usepackage{algpseudocode}


% Definizione intestazioni e pie' di pagina
\usepackage{fancyhdr}

% _____________________________
\lstdefinelanguage{JS}{
keywords={typeof, new, true, false, catch, function, return, null, catch, switch, var, if, in, while, do, else, case, break},
keywordstyle=\color{blue}\bfseries,
ndkeywords={class, export, boolean, throw, implements, import, this},   ndkeywordstyle=\color{darkgray}\bfseries,
identifierstyle=\color{black},
sensitive=false,   
comment=[l]{//},   
morecomment=[s]{/*}{*/},   
commentstyle=\color{purple}\ttfamily,   
stringstyle=\color{red}\ttfamily,   
morestring=[b]',   
morestring=[b]" 
}


\definecolor{dkgreen}{rgb}{0,0.6,0}
\definecolor{gray}{rgb}{0.5,0.5,0.5}
\definecolor{mauve}{rgb}{0.58,0,0.82}
\lstset{frame=tb,  
language=JS,
aboveskip=3mm,   
belowskip=3mm,   
showstringspaces=false,   
columns=flexible,   
basicstyle={\small\ttfamily},   
numbers=none,   
numberstyle=\tiny\color{gray},   
keywordstyle=\color{blue},   
commentstyle=\color{dkgreen},   
stringstyle=\color{mauve},   
breaklines=true,   
breakatwhitespace=true,   
tabsize=3 }

% _____________________________

\usepackage[math]{cellspace}
    \cellspacetoplimit 4pt
    \cellspacebottomlimit 4pt
\end_preamble
\use_default_options true
\begin_modules
InStar
graphicboxes
fix-cm
fixltx2e
fixme
customHeadersFooters
pdfform
\end_modules
\maintain_unincluded_children false
\begin_forced_local_layout
Format 60
Style "In Preamble"
	Category "FrontMatter"
	Margin Static
	LatexType Paragraph
	InTitle 0
	InPreamble 1
	TocLevel -1000
	NeedProtect 0
	KeepEmpty 0
	NextNoIndent 0
	CommandDepth 0
	LatexName "dummy"
	ItemCommand item
	LabelType No_Label
	EndLabelType No_Label
	ParagraphGroup "0"
	ParIndent MM
	ParSkip 0.4
	ItemSep 0
	TopSep 0
	BottomSep 0
	LabelBottomSep 0
	ParSep 0
	NewLine 1
	Align Block
	AlignPossible Block, Center, Layout, Left, Right
	FreeSpacing 0
	PassThru 0
	ParbreakIsNewline 0
	RefPrefix OFF
	HTMLLabelFirst 0
	HTMLStyle
div.standard {
margin-bottom: 2ex;
}
	EndHTMLStyle
	HTMLForceCSS 0
	HTMLTitle 0
	Spellcheck 1
	ForceLocal 1
End
Style "In Title"
	Category "FrontMatter"
	Margin Static
	LatexType Paragraph
	InTitle 1
	InPreamble 0
	TocLevel -1000
	NeedProtect 0
	KeepEmpty 0
	NextNoIndent 0
	CommandDepth 0
	LatexName "dummy"
	ItemCommand item
	LabelType No_Label
	EndLabelType No_Label
	ParagraphGroup "0"
	ParIndent MM
	ParSkip 0.4
	ItemSep 0
	TopSep 0
	BottomSep 0
	LabelBottomSep 0
	ParSep 0
	NewLine 1
	Align Block
	AlignPossible Block, Center, Layout, Left, Right
	FreeSpacing 0
	PassThru 0
	ParbreakIsNewline 0
	RefPrefix OFF
	HTMLLabelFirst 0
	HTMLStyle
div.standard {
margin-bottom: 2ex;
}
	EndHTMLStyle
	HTMLForceCSS 0
	HTMLTitle 0
	Spellcheck 1
	ForceLocal 1
End
\end_forced_local_layout
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 1
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize default
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\rightmargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes true
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\author 1604105849 "Filippo Cremonese"
\end_header

\begin_body

\begin_layout Standard
\begin_inset Preview

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{titlepage}
\end_layout

\begin_layout Plain Layout


\backslash
newcommand{
\backslash
HRule}{
\backslash
rule{
\backslash
linewidth}{0.5mm}}
\end_layout

\begin_layout Plain Layout


\backslash
center
\end_layout

\begin_layout Plain Layout


\backslash
textsc{
\backslash
LARGE Politecnico di Milano}
\backslash

\backslash
[1.5cm] 
\end_layout

\begin_layout Plain Layout


\backslash
textsc{
\backslash
Large Travlendar+}
\backslash

\backslash
[0.5cm]
\end_layout

\begin_layout Plain Layout


\backslash
textsc{
\backslash
Large Life, simplified}
\backslash

\backslash
[0.5cm]
\end_layout

\begin_layout Plain Layout


\backslash
textsc{
\backslash
Large Software Engineering 2}
\backslash

\backslash
[0.5cm]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
HRule 
\backslash

\backslash
[0.4cm] { 
\backslash
huge 
\backslash
bfseries Design Document}
\backslash

\backslash
[0.4cm] 
\backslash
HRule 
\backslash

\backslash
[1.5cm]
\end_layout

\begin_layout Plain Layout


\backslash
begin{minipage}{0.4
\backslash
textwidth} 
\end_layout

\begin_layout Plain Layout


\backslash
begin{flushleft} 
\backslash
large 
\backslash
emph{Authors:}
\backslash

\backslash
 
\end_layout

\begin_layout Plain Layout

Alessandro 
\backslash
textsc{Alfonso} 
\backslash
newline 
\end_layout

\begin_layout Plain Layout

Fabrizio 
\backslash
textsc{Carsenzuola} 
\backslash
newline 
\end_layout

\begin_layout Plain Layout

Filippo 
\backslash
textsc{Cremonese} 
\end_layout

\begin_layout Plain Layout


\backslash
end{flushleft} 
\end_layout

\begin_layout Plain Layout


\backslash
end{minipage} 
\end_layout

\begin_layout Plain Layout

~ 
\end_layout

\begin_layout Plain Layout


\backslash
begin{minipage}{0.4
\backslash
textwidth} 
\backslash
begin{flushright} 
\backslash
large 
\end_layout

\begin_layout Plain Layout


\backslash
emph{Supervisor:} 
\backslash

\backslash
 Elisabetta 
\backslash
textsc{De Nitto} 
\end_layout

\begin_layout Plain Layout


\backslash
end{flushright} 
\end_layout

\begin_layout Plain Layout


\backslash
end{minipage}
\backslash

\backslash
[3cm]
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
includegraphics[width=0.3
\backslash
textwidth]{res/img/logopm}
\end_layout

\begin_layout Plain Layout


\backslash
vfill
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{gobble}
\end_layout

\begin_layout Plain Layout

{
\backslash
large 
\backslash
today}
\backslash

\backslash
[3cm]
\end_layout

\begin_layout Plain Layout


\backslash
end{titlepage}
\end_layout

\begin_layout Plain Layout


\backslash
newpage{}
\end_layout

\begin_layout Plain Layout


\backslash
mbox{} 
\backslash
thispagestyle{empty} 
\backslash
newpage
\end_layout

\begin_layout Plain Layout


\backslash
newpage{}
\end_layout

\begin_layout Plain Layout


\backslash
tableofcontents{}
\backslash
thispagestyle{empty}
\end_layout

\begin_layout Plain Layout


\backslash
newpage{}
\end_layout

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Revision History
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="4">
<features tabularvalignment="middle" tabularwidth="100text%">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top" width="0pt">
<row topspace="2pt" bottomspace="2pt">
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Version
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Authors
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Summary
\end_layout

\end_inset
</cell>
</row>
<row topspace="2pt" bottomspace="2pt">
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
-
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alessandro Alfonso, Fabrizio Carsenzuola, Filippo Cremonese
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Living document
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection
Purpose
\end_layout

\begin_layout Standard
This document describes the details of the proposed implementation of Travlendar
+.
 The requirements for the system were described in the Requirement Analysis
 and Specifications Document which should be read before reading this document.
 Here we document and explain design and implementation choices, first in
 overview and then in detail.
 The target audience of this document are the future developers of the system,
 as well as the project owner, prof.
 Di Nitto.
\end_layout

\begin_layout Subsection
Scope
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TBD (right now it's copy-pasted from the RASD)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Travlendar+ will be available on all the most used platforms (mobile and
 desktop).
 Other apps that partially cover Travlendar+ functionality already exist:
\end_layout

\begin_layout Itemize
calendar apps that provide weather information
\end_layout

\begin_layout Itemize
public transport assistants (e.g.
 Citymapper.
 See references 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:References"

\end_inset

)
\end_layout

\begin_layout Itemize
public transport ticketing apps
\end_layout

\begin_layout Itemize
navigation apps (e.g.
 Google Maps.
 See references 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:References"

\end_inset

)
\end_layout

\begin_layout Itemize
taxi apps (e.g.
 MyTaxi, Uber.
 See references 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:References"

\end_inset

)
\end_layout

\begin_layout Itemize
sharing mobility services applications (e.g.
 Enjoy, Mobike.
 See references 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:References"

\end_inset

)
\end_layout

\begin_layout Standard
Altough applications such as Citymapper or Google Maps already offer an
 excellent user experience, none of those apps allow to seamlessly schedule
 an appointment while keeping track of weather and travel times.
 Moreover, ticketing apps for public transportation are often poorly built,
 which increases the need for the in-app ticket purchase functionality in
 Travlendar+.
 The existing sharing mobility services don't offer the possibility to automatic
ally reserve the nearest vehicle at a certain date and time.
\end_layout

\begin_layout Standard
The system will need to interact with external entities and events beyond
 of our control (public transportation, sharing mobility services, weather)
 which can disrupt user experience.
 The specifications of the service are based upon the assumption that most
 of the time those external entities will behave as expected (documented
 in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Assumptions and dependencies"

\end_inset

).
 When one or some external services won't behave as expected, the application
 will work the same but in a dregradated state.
 If it is possible the system should notify the user that the application
 will work in a limited way (and tells him which services are unaviable).
 
\end_layout

\begin_layout Subsection
Definitions, acronyms, abbreviations
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TBD
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Reference documents
\end_layout

\begin_layout Itemize
RASD.pdf: Requirements Analysis and Specification Document
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Mandatory Project Assignments.pdf
\begin_inset Quotes erd
\end_inset

: Project assignments
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Architectural Design
\end_layout

\begin_layout Subsection
Logical components overview
\end_layout

\begin_layout Standard
Travlendar+ will consist of several logical components, following a traditional
 multi-tier architecture:
\end_layout

\begin_layout Itemize
Client UI
\end_layout

\begin_layout Itemize
Web server, load balancer and reverse proxy
\end_layout

\begin_layout Itemize
APIs (application logic)
\end_layout

\begin_layout Itemize
Database
\end_layout

\begin_layout Itemize
External APIs and data sources
\end_layout

\begin_layout Subsubsection*
Client UI
\end_layout

\begin_layout Standard
End users will be able to use Travlendar on their mobile devices and desktop
 computers.
 We will develop applications compatible with smartphones and tablets running
 the two most common operating systems, iOS and Android.
 A desktop web application will be developed using the React framework,
 and the same code will be reused to build a standalone desktop application
 with support for push notifications and better OS integration by leveraging
 the Electron framework.
\end_layout

\begin_layout Subsubsection*
Web server, load balancer and reverse proxy
\end_layout

\begin_layout Standard
In a first moment we will deploy a single Nginx web server and there will
 be no load balancer.
 The web application will fetch resources (HTML, CSS, JS, images, ...) from
 the web server, which will implement no application logic, forwarding API
 requests to the appropriate backend service instead.
 When the need will arise more machines will be provisioned as web servers
 and/or API service providers and Nginx will be configured to balance the
 load between them.
\end_layout

\begin_layout Subsubsection*
APIs (application logic)
\end_layout

\begin_layout Standard
Server side Travlendar+ functionality will be implemented as many services
 reachable as HTTP REST APIs.
 Each service will implement a specific functionality (see section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:APIs-(application-logic)"

\end_inset

 for more details on how the services will be split).
 Each service will depend only on the public APIs provided by other internal
 and external services.
 We will use Python and leverage the Flask framework.
\end_layout

\begin_layout Subsubsection*
Database
\end_layout

\begin_layout Standard
All the services will store and fetch data from a single logical database.
 Physically the database will be replicated over multiple machines, allowing
 to distribute load and avoid having a single point of failure.
 We will use MariaDB as DBMS.
\end_layout

\begin_layout Subsubsection*
External APIs and data sources
\end_layout

\begin_layout Standard
Travlendar+ will rely on external services for:
\end_layout

\begin_layout Itemize
public transport information
\end_layout

\begin_layout Itemize
weather forecast
\end_layout

\begin_layout Itemize
map data
\end_layout

\begin_layout Itemize
traffic information
\end_layout

\begin_layout Itemize
find and reserve sharing mobility vehicles
\end_layout

\begin_layout Itemize
obtaining informations on public transportation tickets
\end_layout

\begin_layout Itemize
reserving taxis
\end_layout

\begin_layout Itemize
route planning
\end_layout

\begin_layout Itemize
notifications and emails
\end_layout

\begin_layout Itemize
processing payments
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
TODO: diagram detailing how the high level components interact with each
 other
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/MultiTier Architecture.png
	width 85text%
	height 85theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
MultiTier Architecture
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/HardwareRepresentation.png
	width 100text%
	height 100theight%
	keepAspectRatio
	scaleBeforeRotation
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Hardware Representation
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Component view
\end_layout

\begin_layout Standard
Each logical component is made of several subcomponents.
\end_layout

\begin_layout Subsubsection
Client UI
\end_layout

\begin_layout Standard
End users will be able to use Travlendar+ on
\end_layout

\begin_layout Itemize
smartphones and tablets running Android 4.4+
\end_layout

\begin_layout Itemize
iPhone and iPad running iOS 10+
\end_layout

\begin_layout Itemize
laptops/desktops browsers (Chrome, Firefox, Safari and Edge)
\end_layout

\begin_layout Itemize
desktop (Linux, macOS and Windows)
\end_layout

\begin_layout Paragraph*
Android app
\end_layout

\begin_layout Standard
The android app will be built using Kotlin, the new official language for
 building apps for the platform.
\end_layout

\begin_layout Paragraph*
iOS App
\end_layout

\begin_layout Standard
The iOS app will be built using Swift.
\end_layout

\begin_layout Paragraph*
Desktop web and native apps
\end_layout

\begin_layout Standard
The desktop web application will be built using the React framework.
 The desktop application will be built using Electron reusing most of the
 code of the web application, adding code to support native functionality
 such as OS integrated notifications.
\end_layout

\begin_layout Subsubsection
Web server, load balancer and reverse proxy
\end_layout

\begin_layout Standard
An Nginx web server will serve the web application resources (HTML, CSS,
 JS, ...) and proxy incoming requests to the HTTP APIs.
\end_layout

\begin_layout Subsubsection
APIs (application logic)
\begin_inset CommandInset label
LatexCommand label
name "subsec:APIs-(application-logic)"

\end_inset


\end_layout

\begin_layout Itemize
User management service
\end_layout

\begin_deeper
\begin_layout Itemize
Authentication
\end_layout

\begin_layout Itemize
Sign up
\end_layout

\begin_layout Itemize
Password reset
\end_layout

\begin_layout Itemize
User information and preferences
\end_layout

\end_deeper
\begin_layout Itemize
Calendar management service
\end_layout

\begin_deeper
\begin_layout Itemize
Manages calendars and events
\end_layout

\end_deeper
\begin_layout Itemize
Travel planing service
\end_layout

\begin_deeper
\begin_layout Itemize
Provides travel suggestions
\end_layout

\begin_layout Itemize
Uses external API to get itineraries, maps, and travel means information
\end_layout

\end_deeper
\begin_layout Itemize
Event notifications service
\end_layout

\begin_deeper
\begin_layout Itemize
Generates notifications related to calendar events
\end_layout

\end_deeper
\begin_layout Itemize
Travel notifications service
\end_layout

\begin_deeper
\begin_layout Itemize
Generates travel-related notifications (e.g.
 if a travel needs to be rescheduled due to a strike)
\end_layout

\begin_layout Itemize
Uses external APIs to get travel means informations and weather
\end_layout

\end_deeper
\begin_layout Itemize
Notification delivery service
\end_layout

\begin_deeper
\begin_layout Itemize
Pushes notifications to users via email or push
\end_layout

\end_deeper
\begin_layout Itemize
Taxi reservation service
\end_layout

\begin_layout Itemize
Mobility sharing reservation service
\end_layout

\begin_deeper
\begin_layout Itemize
Searches for a vehicle to reserve before the start of a trip
\end_layout

\end_deeper
\begin_layout Itemize
Ticket shop service
\end_layout

\begin_deeper
\begin_layout Itemize
Links our service, public transport ticketing service and payment processor
\end_layout

\end_deeper
\begin_layout Subsubsection
Database
\end_layout

\begin_layout Standard
We will use MariaDB as DBMS for storing data.
\end_layout

\begin_layout Subsubsection
Information and Data tier 
\begin_inset Note Note
status open

\begin_layout Plain Layout
da rinominare meglio
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Stores our application data and fetches external data such as maps, weather,
 public transport informations, ticket information, taxi information, sharing
 mobility
\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

The interactions between the main components are shown in figure:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/ComponentView.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Component View
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
External APIs and data sources
\end_layout

\begin_layout Subsection
Deployment view
\end_layout

\begin_layout Standard
In this section in shown how the software components are distributed with
 respect to the hardware resources available in the system.
 The mobile applications communicate directly with application server via
 RESTful API while the browser applications communicate with the Web server
 that receives users' requests, interacts with the Business server and provides
 HTML pages in order to start the user experience.
 The system can retrieve information from each car communicating with their
 ADS via RESTful API.
 The Business server contains the application logic and the modules that
 handle the main functionalities of the system.
 Every module is accessible only by the allowed users.
 All the data needed for the operations handled by the modules are retrieved
 from the database in the Data server.
 The various interactions with the database are monitored by the DBMS in
 order to guarantee the ACID properties of the database.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/DeploymentView.png
	width 76text%
	height 80theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Deployment View
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Runtime view
\end_layout

\begin_layout Standard
In this section are explained through Sequence diagrams some of the most
 relevant interactions between components and actors of the system.
 Like in the RASD document, some assumptions are made in order to simplify
 the representation and clarify some aspects; by the way, some of the most
 important features, if considered implicit in a Sequence diagram, are explicitl
y represented in another one.
\end_layout

\begin_layout Subsubsection*
Login Sequence Diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/Sequence Diagrams/login.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Login Sequence Diagram
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection*
Registration Sequence Diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/Sequence Diagrams/registration.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Registration Sequence Diagram
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection*
Check Cars' Availability Sequence Diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/Sequence Diagrams/availability.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Check Cars’ Availability Sequence Diagram
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection*
Modify Personal Information Sequence Diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/Sequence Diagrams/editpersonalinfo.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Modify Personal Information Sequence Diagram
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection*
Car Reservation Sequence Diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/Sequence Diagrams/reservecar.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Car Reservation Sequence Diagram
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection*
Car Unlock Sequence Diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/Sequence Diagrams/opencar.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Car Unlock Sequence Diagram
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection*
Car Rental Sequence Diagram
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/Sequence Diagrams/rental.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Car Rental Sequence Diagram
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Component interfaces
\end_layout

\begin_layout Standard
In this section we describe the the APIs provided by each component of the
 system.
 A mid-high level view of the main functionalities is presented, and other
 trivial API endpoints may and will be added during the implementation phase.
 Endpoints that require authentication are clearly marked at the beginning
 of the description.
\end_layout

\begin_layout Subsubsection*

\series bold
User managment service
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Vertical cell spacing
\end_layout

\begin_layout Plain Layout

{
\backslash
renewcommand{
\backslash
arraystretch}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="35text%">
<column alignment="left" valignment="middle" width="65text%">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" width="100col%">
\begin_inset Text

\begin_layout Plain Layout
Sign up and account managment
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initiate_signup(user_data)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Creates a new 
\family typewriter
unconfirmed user
\family default
 in the system with the information provided during the registration phase
 and sends the verification email.verifies correctness and completeness of
 the datacreates user instance in the databasegenerates a secure random
 verification codeassociates the code with the user in the databaseuses
 the Notifications delivery service to send a verification email with the
 code to the user
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
complete_signup(verification_code)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ends the user signup process by verifying the code sent by email to newly
 registered users.
 If the code is correct the corresponding user is marked as verified and
 will be able to use the service.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
change_password(current_password, new_password)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
\end_layout

\begin_layout Enumerate
Verifies that current_password matches the current user password.
 If it does not match, go to 5.
\end_layout

\begin_layout Enumerate
Verifies that new_password is different than the current one and satisfies
 password strength requirements
\end_layout

\begin_layout Enumerate
Stores the new password in the database
\end_layout

\begin_layout Enumerate
Uses the Notifications delivery service to inform the user that his password
 has changed.
 End.
\end_layout

\begin_layout Enumerate
Uses the Notifications delivery service to inform the user that an attempt
 to change his password is failed.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
initiate_password_recovery(username)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Initiates password recovery procedure for a user.
\end_layout

\begin_layout Enumerate
Generates a secure random verification code
\end_layout

\begin_layout Enumerate
Associates the code with the username in the database
\end_layout

\begin_layout Enumerate
Uses the Notifications delivery service to send a verification email to
 the user containing a link with the verification code
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
recover_password(verification_code, new_password)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Allows to recover a user password.
\end_layout

\begin_layout Enumerate
Checks the verification_code against the database and gets which user it
 belongs to
\end_layout

\begin_layout Enumerate
Asserts that the new password satisfies password strength requirements
\end_layout

\begin_layout Enumerate
Changes the user password
\end_layout

\begin_layout Enumerate
Uses the Notifications delivery service to inform the user that his password
 has changed.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="35text%">
<column alignment="left" valignment="middle" width="65text%">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Login
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
login(user, password)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Verifies the supplied user credentials and, if correct, returns an authenticatio
n token which can be used (via an HTTP header or cookie) to access other
 restricted APIs.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="35text%">
<column alignment="left" valignment="middle" width="65text%">
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Account managment
\end_layout

\end_inset
</cell>
<cell multicolumn="2" alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
get_account_information()
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Returns user account informations and preferences.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
update_account_information(user_data)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Updates the account information.
\end_layout

\begin_layout Enumerate
Verifies that the user can update the data he has provided
\end_layout

\begin_layout Enumerate
Updates the user data
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Calendar managment service
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Vertical cell spacing
\end_layout

\begin_layout Plain Layout

{
\backslash
renewcommand{
\backslash
arraystretch}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="35text%">
<column alignment="left" valignment="middle" width="65text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
create_calendar(calendar_name)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Creates a new calendar for the authenticated user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
get_calendars()
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Returns the calendars accessible by the authenticated user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delete_calendar(calendar_id)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Deletes a calendar belonging to the authenticated user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
create_event(event_details, calendar_id)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Adds an event to a calendar.
\end_layout

\begin_layout Enumerate
Verifies correctness and completness of the event details (e.g.
 the event must have a name, coherent start/end dates, ...)
\end_layout

\begin_layout Enumerate
Verifies that the calendar belongs to the authenticated user
\end_layout

\begin_layout Enumerate
Adds the event to the calendar, saving it in the database
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
get_events(query)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Returns the events matching the given query.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
delete_event(event_id)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Deletes an event that belongs to the authenticated user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
update_event(event_id, event_details)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Requires authentication.
 Updates an event belonging to the authenticated user.
\end_layout

\begin_layout Enumerate
Verifies correctness of the updated event details
\end_layout

\begin_layout Enumerate
Verifies that the event belongs to the authenticated user
\end_layout

\begin_layout Enumerate
Updates the event details
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Da aggiungere altri endpoint relativi agli eventi
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Travel planning service
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Vertical cell spacing
\end_layout

\begin_layout Plain Layout

{
\backslash
renewcommand{
\backslash
arraystretch}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="35text%">
<column alignment="left" valignment="middle" width="65text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
get_travel_suggestions(start_location, end_location, travel_start_time[,
 travel_preferences])
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Returns travel suggestions, combining results from external services.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schedule_shared_reservation(location, datetime, event_id, vehicle_type)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Schedules a reservation of a shared vehicle associated to an event
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
schedule_taxi_reservation(location, datetime, event_id)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Schedules the reservation of a taxi associated to an event
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Notification delivery service
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Vertical cell spacing
\end_layout

\begin_layout Plain Layout

{
\backslash
renewcommand{
\backslash
arraystretch}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="35text%">
<column alignment="left" valignment="middle" width="65text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
send_push(username, notification)
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal API callable only by other services.
 Sends a push notification to the user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
send_email(username, notification)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal API callable only by other services.
 Sends an email notification to the user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
send_notification(username, notification)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal API callable only by other services.
 Send a notification to the user, accounting for their preference when it
 comes to sending an email or a push or both.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Ticket shop service
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

% Vertical cell spacing
\end_layout

\begin_layout Plain Layout

{
\backslash
renewcommand{
\backslash
arraystretch}{2}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="2">
<features islongtable="true" longtabularalignment="center">
<column alignment="center" valignment="top" width="35text%">
<column alignment="left" valignment="middle" width="65text%">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Endpoint
\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Description
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\change_deleted 1604105849 1511174925
send_push(username, notification)
\change_inserted 1604105849 1511174940
get_tickets_for(line)
\change_unchanged

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal API callable only by other services.
 Sends a push notification to the user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\change_deleted 1604105849 1511174946
send_email(username, notification)
\change_inserted 1604105849 1511174949
get_
\change_unchanged

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal API callable only by other services.
 Sends an email notification to the user.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
send_notification(username, notification)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Internal API callable only by other services.
 Send a notification to the user, accounting for their preference when it
 comes to sending an email or a push or both.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Event notifications service
\end_layout

\begin_layout Standard
This service does not expose any endpoints.
\end_layout

\begin_layout Subsubsection*
Travel notifications service
\end_layout

\begin_layout Standard
This service does not expose any endpoints.
\end_layout

\begin_layout Subsubsection*
Taxi reservations service
\end_layout

\begin_layout Standard
This service does not expose any endpoints.
\end_layout

\begin_layout Subsubsection*
Mobility sharing reservation service
\end_layout

\begin_layout Standard
This service does not expose any endpoints.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Cose non nostre da qui in avanti
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection*

\series bold
Other Specifications
\end_layout

\begin_layout Itemize
The front-ends of the system (the mobile app and the web application) communicat
e with the Application Server using the back-end interface implemented as
 a RESTful interface over the HTTPS protocol.
\end_layout

\begin_layout Itemize
The users’ browsers will communicate with the web server via HTTPS requests.
 Any unencrypted request will be denied.
\end_layout

\begin_layout Itemize
The RESTful interface is implemented in the Application server using JAX-RS
 and uses XML as the data representation language.
\end_layout

\begin_layout Itemize
The Application Server communicates with the DBMS via the Java Persistence
 API over standard network protocols.
\end_layout

\begin_layout Itemize
The Application Server is configurable by means of a XML configuration file,
 that will contain any other setting useful in the implementation phase.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Architectural styles and patterns
\end_layout

\begin_layout Subsubsection
Architectural patterns
\end_layout

\begin_layout Standard
The architecture of the system has been previously described at higher level.
\end_layout

\begin_layout Standard
As we said, we adopted a 
\series bold
multi-tier architecture
\series default
 in which every tier is hosted on a different machine: the 
\shape italic
Client
\shape default
 tier is on the pc or smartphone the user access the system from, the 
\shape italic
Web
\shape default
 tier is hosted on a separate server used only for this purpose, while another
 server hosts the 
\shape italic
Business
\shape default
 tier.
 Finally a last server contains the 
\shape italic
Data
\shape default
 tier.
\end_layout

\begin_layout Standard
This division between all levels has been made in order to allow update
 and maintenance on a particular tier without affecting the others, and
 to prevent the whole system to interrupt in case of fault of a component.
 We also adopted the 
\shape italic
thin client
\shape default
 paradigm to the interaction between user’s machine and the system: in this
 way all the application logic is on the application server, which has sufficien
t computing power and is able to manage concurrency issue efficiently.
\end_layout

\begin_layout Subsubsection
Design Patterns
\end_layout

\begin_layout Standard
The Design pattern used for this system is the 
\series bold
Model-View-Controller
\series default
 (MVC).
\end_layout

\begin_layout Standard
This choice has been made mainly for the flexibility that this pattern provides:
 the 
\shape italic
model
\shape default
, the 
\shape italic
view
\shape default
 and the 
\shape italic
controller
\shape default
 are separated into different components that can be modified with a minimum
 impact with respect to the others, helping to achieve a better scalability
 and offering the possibility to add new functionalities to the system or
 to apply changes to the code.
 In more detail:
\end_layout

\begin_layout Itemize
The 
\series bold
Model
\series default
 contains the representation of data and the application logic, so all the
 functions that manipulates data.
\end_layout

\begin_layout Itemize
The 
\series bold
View
\series default
 makes the model suitable for the user interaction, providing a GUI: every
 user will access the system and all its functionalities through this component.
 Furthermore, it provides the possibility to have different representations
 (or views) for the same data, depending on the user’s preference or on
 the user’s permissions.
\end_layout

\begin_layout Itemize
The 
\series bold
Controller
\series default
, finally, is responsible for the communication between the View and the
 Model: in particular it responds to user’s actions and invokes changes
 on the model.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
Other design decisions
\end_layout

\begin_layout Subsubsection
Storage of passwords
\end_layout

\begin_layout Standard
Users’ password will not be stored in plain-text, but they will be hashed
 and salted with cryptographic hash functions.
 This provides a last line of defense in case of data theft.
\end_layout

\begin_layout Subsubsection
Google Maps
\end_layout

\begin_layout Standard
The system uses an external service, Google Maps, to offload all the geolocaliza
tion, distance calculation and map visualization processes.
 The reasons of this choice are the following:
\end_layout

\begin_layout Itemize
manually developing maps for each city is not a viable solution due to the
 tremendous effort of coding and data collection required;
\end_layout

\begin_layout Itemize
Google Maps is a well-established, tested and reliable software component
 already used by millions of people around the world;
\end_layout

\begin_layout Itemize
Google Maps offers APIs, enabling programmatic access to its features;
\end_layout

\begin_layout Itemize
Google Maps can be used both on the server side (calculation, shortest paths,
 traffic, incident reporting) and on the client side (map visualization);
\end_layout

\begin_layout Itemize
the users feel comfortable with a software component they know and use everyday.
\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Algorithm Design
\end_layout

\begin_layout Standard
In this section we will focus mostly on two important themes: the calculus
 of the reservations’ and rents’ fees and the uniform redistribution of
 the cars.
 It is very important to implement the former in a dynamic and easy-to-change
 way because of the continuously changing business strategies and it is
 fundamental to give a lot of attention to the latter because it would considera
bly increase the quality of the service and incentivize the virtuous behaviours
 of the user, according to the core values of PowerEnjoy.
\end_layout

\begin_layout Subsection
The uniform distribution of cars
\end_layout

\begin_layout Standard
Let’s start from the attempt to redistribute in a uniform way the cars into
 each city.
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
The first kind of solution we will propose is valid from a theoretical point
 of view, but it is not so suitable to our service.
 We will explain it anyway to give a deep and better understanding of the
 problem and of our reasoning.
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
To guarantee an effectively uniform distribution of the cars, we would act
 in this way:
\end_layout

\begin_layout Enumerate
For each point (intended as a couple of two values: 
\series bold
latitude
\series default
 and 
\series bold
longitude
\series default
) inside the city (intended as a 
\shape italic
closed ensemble of points
\shape default
), we would calculate the minimum distance with the first available car
 found.
\end_layout

\begin_layout Enumerate
Among these minimum distances, we would take in account the greatest one
 and we would put a new available car in that exact point.
\end_layout

\begin_layout Standard
By iterating these two steps, we would guarantee an uniform distribution
 of cars, starting from a 2-dimensional space (the city) already filled
 in part with other cars, unmovable.
\begin_inset VSpace medskip
\end_inset


\end_layout

\begin_layout Standard
However this solution is not a feasible one because it would be necessary
 to use an ingent calculus power to effectively substain a similar amount
 of operations.
 Perhaps it would be possible to achieve the same result with a smaller
 quantity of points (taken randomly or in a less accurate way) or in the
 opposite way: we could calculate the maximum distant point from each available
 car inside the city, and decide to address the user there.
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
However this theoretical solution won’t take in account two important facts:
\end_layout

\begin_layout Enumerate
the first one is that we cannot address the user into a specific point (intended
 as above, a couple of 
\shape italic
latitude
\shape default
 and 
\shape italic
longitude
\shape default
) but we have to address him/her into a recharging station 
\shape italic
near
\shape default
 the point, so we will be able anyway only to achieve an 
\shape italic
approximately
\shape default
 uniform distribution of cars.
\end_layout

\begin_layout Enumerate
the second one is that the user will never revolutionize his destination,
 so we have to address him into a point not so 
\shape italic
far
\shape default
 from his final destination.
 
\end_layout

\begin_layout Standard
So we abandoned the utopia of a 
\shape italic
perfect
\shape default
 uniform distribution of cars, and we focused mainly on the distribution
 of the car taking in account the PowerEnjoy power grid stations.
\end_layout

\begin_layout Standard
\begin_inset VSpace smallskip
\end_inset

We first ranked them according to the 
\shape italic
utility function
\shape default
 of the user, in agreement with the point of view of some experts: let’s
 take in account Milan, the first city in which we offered our service.
 As showed in figure, we ranked the main zones of Milan giving them a number
 from 1 to 6, according to the attractivness of that place for our clients.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/milan.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ranking of the Power Grid Stations in Milan
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Then we defined a customized radius of 500 - 1000 meters for each power
 grid station and we covered the whole map of Milan by drawing one circumference
 for each one of them, according to their given radius, as showed in figure.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/milan2.png
	width 100text%
	height 100theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Radius of the Power Grid Stations in Milan
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this way, when a user with the enabled 
\series bold
Money Saving Option
\series default
 would input his/her final destination at the beginning of a rent, the system
 would select a special parking area among all the ones present in the city
 by following these steps:
\end_layout

\begin_layout Enumerate
The system will retrieve the latitude and longitude of the final destination
 of the user;
\end_layout

\begin_layout Enumerate
The system will list all the circumferences (with the relative power grid
 station) that contains that specific point;
\end_layout

\begin_layout Enumerate
If there is only one station (distant in the worst case more or less 500-1000
 meters from the final destination of the user), the system will select
 it and will provide information about it to the user;
\end_layout

\begin_layout Enumerate
If there isn’t any station with free power plugs, a message of error will
 be showed to the user;
\end_layout

\begin_layout Enumerate
If there is more than one station that contains that specific point, the
 system will select the one with the maximum score according to this formula:
\begin_inset Formula 
\[
score=freeSlot*[(ranking-2)+(10-distance/100)*2]
\]

\end_inset

where:
\end_layout

\begin_layout Itemize

\series bold
freeSlot
\series default
 is the number of available power plugs;
\end_layout

\begin_layout Itemize

\series bold
ranking
\series default
 is the number from 1 to 6 assigned to the zone in which is contained the
 selected power grid station;
\end_layout

\begin_layout Itemize

\series bold
distance
\series default
 is the quantity of meters that separates the final destination of the user
 from the selected power grid station.
\end_layout

\begin_layout Enumerate
Example n°1:
\end_layout

\begin_deeper
\begin_layout Standard
The final destination of the user is in piazza delle Meraviglie, 34.
 At this address correspond the point with latitude x and longitude y, and
 there are 4 power grid stations that contain it.
 The power grid stations are characterized by the following information:
\end_layout

\begin_layout Enumerate
4 freeSlot, ranking 3, distance from the final destination of the user 500m;
\end_layout

\begin_layout Enumerate
3 freeSlot, ranking 4, distance from the final destination of the user 350m;
\end_layout

\begin_layout Enumerate
1 freeSlot, ranking 5, distance from the final destination of the user 650m;
\end_layout

\begin_layout Enumerate
2 freeSlot, ranking 3, distance from the final destination of the user 250m;
\end_layout

\begin_layout Standard
By applying the formula written above, we would obtain the following score:
\end_layout

\begin_layout Enumerate
44
\end_layout

\begin_layout Enumerate
45
\end_layout

\begin_layout Enumerate
10
\end_layout

\begin_layout Enumerate
32
\end_layout

\begin_layout Standard
The system will select the power grid station n°2 and it will provide informatio
n to the user about to get there.
\end_layout

\end_deeper
\begin_layout Enumerate
Example n°2:
\end_layout

\begin_deeper
\begin_layout Standard
The final destination of the user is in piazza Trifoglio, 12.
 At this address correspond the point with latitude z and longitude w, and
 there are 2 power grid stations that contain it.
 The power grid stations are characterized by the following information:
\end_layout

\begin_layout Enumerate
0 freeSlot, ranking 5, distance from the final destination of the user 100m;
\end_layout

\begin_layout Enumerate
2 freeSlot, ranking 4, distance from the final destination of the user 450m;
\end_layout

\begin_layout Standard
By applying the formula written above, we would obtain the following score:
\end_layout

\begin_layout Enumerate
0
\end_layout

\begin_layout Enumerate
26
\end_layout

\begin_layout Standard
The system will select the power grid station n°2 and it will provide informatio
n to the user about to get there.
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

In this way we would achieve our goal to distribute cars in the smartest
 way we were able to think about.
\end_layout

\begin_layout Subsection
How to apply the Reservation fees
\end_layout

\begin_layout Standard
In this section we will analyze the structure of the code that will handle
 the payment for the reservation fees.
\end_layout

\begin_layout Subparagraph*
applyReservationFees(Reservation)
\end_layout

\begin_layout Standard
\SpecialChar ligaturebreak

\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/*   This function will apply the fees for each Reservation instance.
 Actually, the user can terminate a reservation for free, but in the future
 if PowerEnjoy would decide to apply a fee for the termination of a reservation,
 it would be very easy to modify this value.
 If the user picks up the car, his reservation terminates and the system
 will create another object Rent: no fees will be applied to transform a
 reservation into a rent.
 On the other hand, if the reservation expires before the user picks up
 the car, the system will apply to him a fee of one euro.
  As said before, it would not be difficult in the future also to change
 this amount of money.
\end_layout

\begin_layout Plain Layout

*/
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

function applyReservationFees (Reservation res){
\end_layout

\begin_layout Plain Layout

	if (res.isExpired()){
\end_layout

\begin_layout Plain Layout

		//   This function will return a 'true' value if the reservation is expired
 because of the time.
\end_layout

\begin_layout Plain Layout

		paymentHandler(res.User, res.expirationFee);
\end_layout

\begin_layout Plain Layout

		//   This function will send a request of payment to the external payment
 service with as input the ID of the user and the amount of money.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	else {
\end_layout

\begin_layout Plain Layout

		paymentHandler(res.User, 0);
\end_layout

\begin_layout Plain Layout

		//   This case covers both the cases in which the user decides to terminate
 the reservation and in which he unlocks the car's doors.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
How to calculate the Rent fees
\end_layout

\begin_layout Standard
In this section we will analyze the structure of the code that will handle
 the payment for the reservation fees.
\end_layout

\begin_layout Subparagraph*
calculateRentDiscount(Rent)
\end_layout

\begin_layout Standard
\SpecialChar ligaturebreak

\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/*   This function will calculate the eventual discount for each rent instance.
   */
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void function calculateRentDiscount(Rent ren){
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

		if (ren.atLeastTwoPassengers()){
\end_layout

\begin_layout Plain Layout

		//   This function will return a 'true' value if almost two passengers
 were in the car.
\end_layout

\begin_layout Plain Layout

		ren.totalCost *= 0.9;
\end_layout

\begin_layout Plain Layout

		//   In this way we will apply a 10% of discount to the client.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	if (ren.report.batteryLevelAtTheEndOfRent >= 0.5){
\end_layout

\begin_layout Plain Layout

		//   This function will return the percentage of battery at the end of
 the rental.
\end_layout

\begin_layout Plain Layout

		ren.totalCost *= 0.8;
\end_layout

\begin_layout Plain Layout

		//   In this way we will apply a 20% of discount to the client.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	if (ren.report.MSOactived() && ren.report.finalDestinationNotEmpty()){
\end_layout

\begin_layout Plain Layout

		//   The first function will return a 'true' value if the user enabled
 the Money Saving Option at the beginning of his/her rent.
 The second funtion will return a 'true' value if the user input his/her
 final destination.
\end_layout

\begin_layout Plain Layout

		if (ren.carParkedAt(ren.report.specialArea) && ren.carLeftUnderCharge()){
\end_layout

\begin_layout Plain Layout

		//   The first function will return a 'true' value if the user parked
 the car in the special area the system provided at the beginning of the
 rent.
 The second function will return a 'true' value if the car is left under
 charge.
\end_layout

\begin_layout Plain Layout

			ren.totalCost *= 0.6;
\end_layout

\begin_layout Plain Layout

		//   In this way we will apply a 40% of discount to the client.
\end_layout

\begin_layout Plain Layout

		else if (ren.carLeftUnderCharge()){
\end_layout

\begin_layout Plain Layout

		//   This function will return a 'true' value if the car is left under
 charge in another recharging area (not the special one provided by the
 system at the beginning of the rent).
\end_layout

\begin_layout Plain Layout

			ren.totalCost *= 0.7;
\end_layout

\begin_layout Plain Layout

		//   In this way we will apply a 30% of discount to the client.
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	else{
\end_layout

\begin_layout Plain Layout

		if (ren.carLeftUnderCharge()){
\end_layout

\begin_layout Plain Layout

		//   This function will return 'true' if the car is left under charge
 in a recharging area.
\end_layout

\begin_layout Plain Layout

			ren.totalCost *= 0.7;
\end_layout

\begin_layout Plain Layout

		//   In this way we will apply a 30% of discount to the client.
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph*
calculateAdditionalFees(Rent)
\end_layout

\begin_layout Standard
\SpecialChar ligaturebreak

\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/*   This function will calculate the additional fees for each rent instance.
   */
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

void function calculateAdditionalFees(Rent ren){
\end_layout

\begin_layout Plain Layout

	if (ren.report.batteryLevelAtTheEndOfRent <= 0.2 ||
\end_layout

\begin_layout Plain Layout

		ren.report.distanceFromTheNearestPowerGridStationInKm >= 3){
\end_layout

\begin_layout Plain Layout

		//   The first value is the same explained above
\end_layout

\begin_layout Plain Layout

		//   The second one is the distance from the nearest power grid station
 expressed in km
\end_layout

\begin_layout Plain Layout

		ren.totalCost *= 1.3;
\end_layout

\begin_layout Plain Layout

		//   In this way we will apply a 30% of additional fee to the client.
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph*
calculateRentFees(Rent)
\end_layout

\begin_layout Standard
\SpecialChar ligaturebreak

\begin_inset space ~
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{lstlisting}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

/*   This function will calculate the fees for each Rent instance.
  In this case we have to consider eventual discounts and other additional
 fees before sending the payment request to the external payment service.
 It would not be difficult in the future to change some parameters according
 to the PowerEnjoy policy.
\end_layout

\begin_layout Plain Layout

*/
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

function calculateRentFees (Rent ren){
\end_layout

\begin_layout Plain Layout

	ren.totalCost = ren.report.totalTime * ren.report.pricePerMinute;
\end_layout

\begin_layout Plain Layout

	// We will first calculate the Total Cost as the multiplication of the
 Total Time of the Rental and the Actual Price Per Minute.
 In the future it would be easy to modify them, according to the PowerEnjoy
 policy.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	calculateRentDiscount(ren);
\end_layout

\begin_layout Plain Layout

	// In this way we will apply all the discount.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	calculateAdditionalFees(ren);
\end_layout

\begin_layout Plain Layout

	// In this way we will apply all the additional fees.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	paymentHandler(ren.User, ren.totalCost);
\end_layout

\begin_layout Plain Layout

	//   This function will send a request of payment to the external payment
 service with as input the ID of the user and the amount of money .
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout


\backslash
end{lstlisting}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
User Interface Design
\end_layout

\begin_layout Standard
In this section we will provide an overview on how the user interfaces of
 our system will look like.
\end_layout

\begin_layout Subsection
UX Diagram
\end_layout

\begin_layout Standard
The UX Diagram shows the interactions between the different screens of the
 User Interface of the clients.
\begin_inset Newline linebreak
\end_inset

The services are both accessible via web and mobile application.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/UX Diagram.png
	width 100text%
	height 76theight%
	keepAspectRatio
	rotateAngle 90

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
UX Diagram 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsection
User UI
\end_layout

\begin_layout Standard
The following mockups represent the user UI, regarding both the Web Browser
 and the Mobile Application interfaces.
\end_layout

\begin_layout Subsubsection
Home Page
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/pc/HomePage.png
	width 60text%
	height 60theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Home Page - Web Browser
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Login 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/mobile/HomePageMobile.png
	width 60text%
	height 60theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Login - Mobile Application 
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Subsubsection
Registration 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/pc/Registration Page.png
	width 70text%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Registration Page - Web Browser
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/mobile/RegistrationPageMobile.png
	width 70text%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Registration Page - Mobile Application 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Edit Personal Information
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/pc/EditPersonalInfo.png
	width 63text%
	height 63theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Edit Personal Information - Web Browser
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Edit Billing Information
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/pc/Edit Billing Information.png
	width 63text%
	height 63theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Edit Billing Information - Web Browser
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Enable / Disable the Money Saving Option
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/mobile/Enable MSO.png
	width 70text%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Enable Money Saving Option - Mobile Application
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/mobile/Disable MSO.png
	width 70text%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Disable Money Saving Option - Mobile Application
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Start Reservation
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/mobile/Start Reservation.png
	width 70text%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Start Reservation - Mobile Application 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Terminate Reservation
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/mobile/End Reservation.png
	width 70text%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Terminate Reservation - Mobile Application 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Unlock the car
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/mobile/Unlock Doors.png
	width 70text%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Unlock Car's Doors - Mobile Application 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Lock the car
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/mockup/mobile/Lock Doors.png
	width 70text%
	height 70theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Lock Car's Doors - Mobile Application 
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Requirements Traceability
\end_layout

\begin_layout Standard
In the RASD document we have deﬁned all the system's requirements: in this
 section we explaine how they map into the design elements deﬁned in this
 document.
 
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="42" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Component (DD)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Requirements (RASD)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.1 Registration of a guest to the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Authentication Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.2 Login of a user into the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AccountInformation Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.9 Modify the profile information
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CheckAvailability Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.3 Find the location of available cars in a speciﬁed area
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.4 Book a car with the possibility to cancel the reservation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reservation Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.6 Be notiﬁed of active reservation status
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.7 End the rental
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Car Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.3 Available cars in a speciﬁed area
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.4 Book a car with the possibility to cancel the reservation
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADS_Application Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.5 Open his/her reserved car
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.6 Active reservation status
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Payment Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.8 Know the total cost at the end of the rental
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.1 Registration of a guest to the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Data Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.2 Login of a user into the system
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Notiﬁcation Manager
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4.1.6 Be notiﬁed of active reservation status
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Implementation, integration and and test plan
\end_layout

\begin_layout Section
Appendix
\end_layout

\begin_layout Subsection
Tools used
\end_layout

\begin_layout Standard
We used the following tools to produce this document:
\end_layout

\begin_layout Itemize

\series bold
LaTex
\series default
 as typesetting system to write this document
\end_layout

\begin_layout Itemize

\series bold
LyX
\series default
 as editor
\end_layout

\begin_layout Itemize

\series bold
Visio Professional
\series default
 and 
\series bold
draw.io
\series default
 to draw all the diagrams
\end_layout

\begin_layout Section
Effort spent
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename res/img/hours.png
	width 50text%
	height 50theight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
References
\end_layout

\end_body
\end_document
